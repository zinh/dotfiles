" curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
call plug#begin('~/.vim/plugged')
Plug 'scrooloose/nerdtree'
Plug 'altercation/vim-colors-solarized'
Plug 'tpope/vim-fugitive'
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
call plug#end()
set nocompatible
filetype off
set rtp+=~/.fzf
map <C-p> :FZF<CR>
set encoding=utf-8
syntax on
filetype plugin indent on
" set omnifunc=syntaxcomplete#Complete
set background=dark
" let g:solarized_visibility = "high"
" let g:solarized_contrast = "high"
colorscheme solarized
" let g:solarized_termcolors=256
" set t_Co=256
map <C-n> :NERDTreeFind<CR>
map <C-Left> :tabprevious<CR>
map <C-Left> :tabnext<CR>
set expandtab
set shiftwidth=2
" Old nerdtree auto-close command
" autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
set laststatus=2
set statusline=\ %{HasPaste()}%F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \ Line:\ %l

set ai "Auto indent
set si "Smart indent
set wrap "Wrap lines

" Search relate
set hlsearch
set incsearch

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" Set wild menu. Demo: :spe<tab><tab>
set wildmenu
set wildmode=list:longest,full

" Moving around viewport
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Remap VIM 0 to first non-blank character
map 0 ^

" Linebreak on 500 characters
set lbr
set tw=500

" With a map leader it's possible to do extra key combinations
let mapleader = ","
let g:mapleader = ","

" Useful mappings for managing tabs
map <leader>tn :tabnew<cr>
map <leader>to :tabonly<cr>
map <leader>tc :tabclose<cr>
map <leader>tm :tabmove
" map <leader>t<leader> :tabnext<cr>
map <leader><tab> :tabnext<cr>

" Set copy to system clipboard
map <leader>c "+y
map <leader>p "+p

" Disable highlight when <leader><cr> is pressed
map <silent> <leader><cr> :noh<cr>

" Enable/Disable line number
nmap <leader>n :set invnumber<CR>

" Set to auto read when a file is changed from the outside
set autoread

" Write with sudo
cmap w!! %!sudo tee > /dev/null %

" Set login shell
" set shell=zsh\ --interactive

" vim markdown plugin
let g:vim_markdown_folding_disabled=1

function! HasPaste()
  if &paste
    return 'PASTE MODE '
  en
    return ''
endfunction

function! CmdLine(str)
    exe "menu Foo.Bar :" . a:str
    emenu Foo.Bar
    unmenu Foo
endfunction

" Vim Hard mode
" autocmd VimEnter,BufNewFile,BufReadPost * silent! call HardMode()

" config for vim-markdown
" disable spell-check
let g:markdown_enable_spell_checking = 0

" Transparent background
hi Normal guibg=NONE ctermbg=NONE
